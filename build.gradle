
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'


version = "1.8"
group= "modulardiversity" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Modular Diversity"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.12.2-14.23.5.2781"
    runDir = "run"
    mappings = "snapshot_20171125"
    useDepAts = true
}

repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
	maven { url "http://www.ryanliptak.com/maven/" }
    maven { url "http://maven.blamejared.com" }
    maven { url "https://modmaven.k-4u.nl" }
    maven { url "https://maven.hellfiredev.net"}
}

dependencies {
	deobfCompile "mezz.jei:jei_1.12.2:4.14.4.267"
    deobfCompile "vazkii.botania:Botania:r1.10-355.4" //should this be deobfProvided?
    deobfCompile "me.desht.pneumaticcraft:pneumaticcraft-repressurized:1.12.2-0.9.1-317"
    deobfCompile "hellfirepvp.modularmachinery:modularmachinery:1.12.2-1.10.0-v42"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier "dev"
}

artifacts {
    archives deobfJar
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }
